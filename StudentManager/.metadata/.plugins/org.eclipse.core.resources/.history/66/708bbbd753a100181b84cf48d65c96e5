package com.runsystem.datnt.services;

import java.util.ArrayList;
import java.util.List;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import com.runsystem.datnt.daos.implementations.UserDaoImpl;
import com.runsystem.datnt.entities.Role;

public class MyUserDetailsService implements UserDetailsService {

	UserDaoImpl userDaoImpl;

	public UserDetails loadUserByUsername(final String username) throws UsernameNotFoundException {
		
		System.out.println(userDaoImpl != null);
		com.runsystem.datnt.entities.User user = null;//userDaoImpl.(username);
		
		if (user == null) {
			return null;
		}
		
	    boolean enabled = true;
	    boolean accountNonExpired = true;
	    boolean credentialsNonExpired = true;
	    boolean accountNonLocked = true;
	    
	    List<GrantedAuthority> authorities = new ArrayList<GrantedAuthority>();
	    
	    for (Role role : user.getRoles()) {
	    	authorities.add(new SimpleGrantedAuthority(role.getRoleName()));
	    }
		
	    User springUser = new User(username, user.getPassword(), enabled, accountNonExpired, credentialsNonExpired, accountNonLocked, authorities);
	    
		return springUser;
	}

	public UserDaoImpl getUserDaoImpl() {
		return userDaoImpl;
	}

	public void setUserDaoImpl(UserDaoImpl userDaoImpl) {
		this.userDaoImpl = userDaoImpl;
	}
	
	
}
