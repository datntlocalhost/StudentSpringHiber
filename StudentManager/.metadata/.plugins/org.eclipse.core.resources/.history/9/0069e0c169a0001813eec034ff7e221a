package com.runsystem.datnt.controllers;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.runsystem.datnt.entities.Records;
import com.runsystem.datnt.entities.School;
import com.runsystem.datnt.entities.Student;
import com.runsystem.datnt.entities.User;
import com.runsystem.datnt.services.implementations.RoleServiceImpl;
import com.runsystem.datnt.services.implementations.SchoolServiceImpl;
import com.runsystem.datnt.services.implementations.StudentServiceImpl;
import com.runsystem.datnt.validations.StudentValidator;

@Controller
public class CreateStudentController {

	@Autowired
	SchoolServiceImpl shoolService;
	
	@Autowired
	RoleServiceImpl   roleService;
	
	@Autowired
	StudentServiceImpl studentService;
	
	/*
	 * Load create page and set attribute for view to render
	 * 
	 * @param model
	 * @param request
	 * @param response
	 * 
	 * @return create page
	 */
	@RequestMapping(value = "/create", method = RequestMethod.GET)
	public String loadPage(Model model, HttpServletRequest request, HttpServletResponse response) {
		
		List<School> schools = shoolService.selectAll();
		Records records = new Records();
		User    user    = new User();
		School  school  = new School();
		Student student = new Student();
		
		student.setRecord(records);
		student.setSchool(school);
		student.setUser(user);
		
		//Set attribute role, list of shool, empty object student for view to render
		model.addAttribute("userRules", "ADMIN");
		model.addAttribute("schools", schools);
		model.addAttribute("student", student);
		
		return "create.html";
	}
	
	
	/*
	 * Create student method.
	 * 
	 * Get student info form POST request, check validation of student info.
	 * Insert student in database if info is valid and return result true or false.
	 * 
	 * @param 
	 * 
	 * @return boolean true if insert success, else false.
	 * */
	@RequestMapping(value = "/admin/create", method = RequestMethod.POST)
	public @ResponseBody boolean onCreateStudent(@ModelAttribute Student student, BindingResult bindingResult) {
		StudentValidator validator = new StudentValidator();
		validator.validate(student, bindingResult);

		//Input invalid
		if (bindingResult.hasErrors()) {
			return false;
		}
	
		return studentService.insert(student, roleService, shoolService);
	}
}
