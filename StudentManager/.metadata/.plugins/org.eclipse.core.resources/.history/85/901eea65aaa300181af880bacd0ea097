package com.runsystem.datnt.validations;

import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import com.runsystem.datnt.models.StudentModel;
import com.runsystem.datnt.utils.Validation;

public class StudentValidator implements Validator {

	public boolean supports(Class<?> arg0) {
		return StudentModel.class.equals(arg0);
	}

	public void validate(Object target, Errors errors) {
		
		StudentModel student = (StudentModel) target;
		
		if (student != null) {
			if (Validation.validName(student.getStudentName(), false)) {
				errors.rejectValue("invalidName", "student.invalid.name");
			}
			
			if (!student.getStartYear().matches(syearRegex)) {
				errors.rejectValue("invalidStartYear", "student.invalid.startyear");
			}
			
			if (!record.getSex().matches(sexRegex)) {
				errors.rejectValue("invalidSex", "student.invalid.sex");
			}
			
			if (!record.getBirthday().matches(birthdayRegex)) {
				errors.rejectValue("invalidBirthDay", "student.invalid.birthday");
			}
			
			if (!record.getPhone().matches(phoneRegex)) {
				errors.rejectValue("invalidPhone", "student.invalid.phone");
			}
			
			if (!record.getEmail().matches(emailRegex)) {
				errors.rejectValue("invalidEmail", "student.invalid.email");
			}
			
			if (!record.getAddress().matches(addressRegex)) {
				errors.rejectValue("invalidAddress", "student.invalid.address");
			}
			
			if (student.getStartYear().matches(syearRegex) && !startYear(student.getStartYear())) {
				errors.rejectValue("invalidStartYear", "student.invalid.startyear");
			}
			
		} else {
			errors.rejectValue("invalidStudent", "invalid.student");
		}
		
	}

}
