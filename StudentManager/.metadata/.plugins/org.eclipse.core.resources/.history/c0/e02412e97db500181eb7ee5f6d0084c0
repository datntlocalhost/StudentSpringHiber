package com.runsystem.datnt.controllers;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.runsystem.datnt.dtos.SchoolDto;
import com.runsystem.datnt.dtos.StudentInfoDto;
import com.runsystem.datnt.dtos.UserDto;
import com.runsystem.datnt.exceptions.AuthException;
import com.runsystem.datnt.models.SearchStudentModel;
import com.runsystem.datnt.services.SchoolService;
import com.runsystem.datnt.services.StudentService;
import com.runsystem.datnt.services.TokenService;
import com.runsystem.datnt.utils.LogginUtils;

@Controller
public class AdminController {
	
	@Autowired
	private SchoolService schoolService;
	
	@Autowired
	private StudentService studentService;
	
	@Autowired
	private TokenService tokenService;
	
	/*
	 * Set some info into model and return page to client.
	 * 
	 * @param model
	 * @param request
	 * @param response
	 * 
	 * @return admin list page.
	 */
	@RequestMapping(value = "/admin/list", method = RequestMethod.GET)
	public String loadPage(Model model, HttpServletRequest request, HttpServletResponse response) {
		LogginUtils.getInstance().logStart(this.getClass(), "loadPage");
		HttpSession session = request.getSession();
		
		//Check token is valid, if token is invalid then redirect to login page.
		try {
			tokenService.checkValidToken(session);
		} catch (AuthException e) {
			LogginUtils.getInstance().logContent(this.getClass(), "Token has expired");
			LogginUtils.getInstance().logEnd(this.getClass(), "loadPage");
			return "redirect:/login?token=false";
		}
		
		List<SchoolDto> schools = schoolService.getSchoolList();
		List<StudentInfoDto> students = studentService.getStudentList();
		List<String> sex = new ArrayList<String>();
		sex.add("Female");
		sex.add("Male");
		
		UserDto user = (UserDto) session.getAttribute("user");
		
		//add attribute username, role, studentlist and school to model
		model.addAttribute("username", user.getUsername());
		model.addAttribute("role", user.getRoles().get(0).getRoleName());
		model.addAttribute("studentList", students);
		model.addAttribute("schools", schools);
		model.addAttribute("searchinfo", new SearchStudentModel());
		
		LogginUtils.getInstance().logEnd(this.getClass(), "loadPage");
		return "studentlist";
	}
}
