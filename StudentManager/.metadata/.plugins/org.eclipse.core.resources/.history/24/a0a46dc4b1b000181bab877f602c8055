package com.runsystem.datnt.controllers;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.runsystem.datnt.dtos.StudentInfoDto;
import com.runsystem.datnt.exceptions.AuthException;
import com.runsystem.datnt.exceptions.InputInvalidException;
import com.runsystem.datnt.models.ResponePackage;
import com.runsystem.datnt.models.SearchStudentModel;
import com.runsystem.datnt.services.StudentService;
import com.runsystem.datnt.services.TokenService;
import com.runsystem.datnt.utils.HeaderPackage;
import com.runsystem.datnt.utils.JsonUtils;
import com.runsystem.datnt.utils.LogginUtils;
import com.runsystem.datnt.validations.SearchValidator;

@Controller
public class SearchController {
	
	@Autowired
	private StudentService studentService;
	
	@Autowired
	private TokenService tokenService;

	/*
	 * This controller get POST request contain search info from client. select from database and return result
	 * for client to render.
	 * 
	 * @param searchInfo
	 * @param binding result to check input is valid.
	 * @param request
	 * @param response
	 * 
	 * @return list of Student List Model object
	 * 
	 * @throws InputInvalidException, AuthException
	 */
	@RequestMapping(value = "/admin/search", method = RequestMethod.POST)
	public @ResponseBody String searchStudent(@RequestBody SearchStudentModel searchInfo, BindingResult bindingResult,
																HttpServletRequest request, HttpServletResponse response) throws InputInvalidException, AuthException {
		LogginUtils.getInstance().logStart(this.getClass(), "searchStudent");
		
		tokenService.checkValidToken(request.getSession());
		
		LogginUtils.getInstance().logInputFromView(this.getClass(), searchInfo.toString());
		
		//init search validator and check input
		SearchValidator validator = new SearchValidator();
		validator.validate(searchInfo, bindingResult);
		
		List<StudentInfoDto> students = new ArrayList<StudentInfoDto>();
		
		if (bindingResult.hasErrors()) {
			LogginUtils.getInstance().logEnd(this.getClass(), "searchStudent");
			throw new InputInvalidException("Input from client is invalid format");
		}
		
		students = studentService.searchStudent(searchInfo);
		
		ResponePackage<StudentInfoDto> responePackage = new ResponePackage<StudentInfoDto>(HeaderPackage.SEARCH);
		responePackage.setData(students);
		
		String json = JsonUtils.objectToJson(responePackage);
		LogginUtils.getInstance().logEnd(this.getClass(), "searchStudent");
		
		return json;
	}
}
