package com.runsystem.datnt.validations;

import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import com.runsystem.datnt.entities.Records;
import com.runsystem.datnt.entities.Student;

public class StudentValidator implements Validator {

	public boolean supports(Class<?> arg0) {
		return Student.class.equals(arg0);
	}

	public void validate(Object target, Errors errors) {
		String nameRegex = "^[a-zA-Z]{0,50}";
		String syearRegex = "^[0-9]{4}-[0-9]{4}$";
		String sexRegex = "^[a-zA-Z]{4,10}$";
		String birthdayRegex = "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])*$";
		String phoneRegex = "^[0-9]{0,15}$";
		String emailRegex = "";
		String addressRegex = "";
		
		Student student = (Student) target;
		Records record  = student != null ? student.getRecord() : null;
		
		if (student != null && record != null) {
			if (!student.getStudentName().matches(nameRegex)) {
				errors.rejectValue("invalidName", "student.invalid.name");
			}
			
			if (!student.getStartYear().matches(syearRegex)) {
				errors.rejectValue("invalidStartYear", "student.invalid.startyear");
			}
			
			if (!record.getSex().matches(sexRegex)) {
				errors.rejectValue("invalidSex", "student.invalid.sex");
			}
			
			if (!record.getBirthday().matches(birthdayRegex)) {
				errors.rejectValue("invalidBirthDay", "student.invalid.birthday");
			}
			
			if (!record.getPhone().matches(phoneRegex)) {
				errors.rejectValue("invalidPhone", "student.invalid.phone");
			}
			
			if (!record.getEmail().matches(emailRegex)) {
				errors.rejectValue("invalidEmail", "student.invalid.email");
			}
			
			if (!record.getAddress().matches(addressRegex)) {
				errors.rejectValue("invalidAddress", "student.invalid.address");
			}
			
			if (student.getStartYear().matches(syearRegex) && !startYear(student.getStartYear())) {
				errors.rejectValue("invalidStartYear", "student.invalid.startyear");
			}
			
		} else {
			errors.rejectValue("invalidStudent", "invalid.student");
		}
		
	}
	
	/*
	 * Valid start year.
	 * 
	 * @param year
	 * 
	 * @return boolean
	 */
	private boolean startYear(String year) {
		String[] years = year.split("-");
		int start = Integer.parseInt(years[0]);
		int end = Integer.parseInt(years[1]);
		return start < end;
	}
	
	public static void main(String[] args) {
		
		String regex = "^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$";
		System.out.println("da@gmai.com.vn".matches(regex));
		
	}

}
