package com.runsystem.datnt.daos.implementations;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.runsystem.datnt.daos.interfaces.TokenDao;
import com.runsystem.datnt.entities.Token;

@Repository
public class TokenDaoImpl implements TokenDao {
	
	@Autowired
	private SessionFactory sessionFactory;

	public boolean insert(Token entity) {
		Session session = sessionFactory.openSession();
		Transaction transaction = null;
		boolean success = false;
		
		String queryString = "INSERT INTO TOKEN(token_username, token_series, token_value, token_timestamp) " +
						     "VALUES(?, ?, ?, ?)";
		
		try {
			transaction = session.beginTransaction();
			Query<Token> query = session.createSQLQuery(queryString);
			query.setParameter(1, entity.getUsername());
			query.setParameter(2, entity.getSeries());
			query.setParameter(3, entity.getToken());
			query.setParameter(4, entity.getTimestamp());
			success = query.executeUpdate() > 0 ? true : false;
		} catch (Exception ex) {
			if (transaction != null) {
				transaction.rollback();
			}
			ex.printStackTrace();
		} finally {
			session.close();
		}
		
		return success;
	}

	public boolean update(Token entity) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean delete(Token entity) {
		Session session = sessionFactory.openSession();
		Transaction transaction = null;
		boolean success = false;
		
		String queryString = "DELETE FROM TOKEN WHERE token_username = :username AND token_series = :series";
		
		try {
			transaction = session.beginTransaction();
			Query<Token> query = session.createSQLQuery(queryString);
			query.setParameter("username", entity.getUsername());
			query.setParameter("series", entity.getSeries());
			success = query.executeUpdate() > 0 ? true : false;
		} catch (Exception ex) {
			if (transaction != null) {
				transaction.rollback();
			}
		} finally {
			session.close();
		}
		
		return success;
	}

	public Token select(int id) {
		// TODO Auto-generated method stub
		return null;
	}

	public List<Token> list() {
		// TODO Auto-generated method stub
		return null;
	}

	public Token selectByUsername(String username) {
		return null;
	}

	public Token selectByUserSeries(String username, String series) {
		Session session = sessionFactory.openSession();
		Transaction transaction = null;
		Token token = null;
		String queryString = "";
		
		try {
			transaction = session.beginTransaction();
			Query<Token> query = session.createSQLQuery(queryString);
		} catch (Exception ex) {
			if (transaction != null) {
				transaction.rollback();
			}
		} finally {
			session.close();
		}
		
		return null;
	}

}
